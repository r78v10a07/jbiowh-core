//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.09.04 at 12:26:35 PM CEST 
//


package org.jbiowhcore.utility.fileformats.bioml.xml;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.jbiowhcore.utility.fileformats.bioml.xml package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.jbiowh.core.utility.fileformats.bioml.xml
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link CommonName }
     * 
     */
    public CommonName createCommonName() {
        return new CommonName();
    }

    /**
     * Create an instance of {@link Promotor }
     * 
     */
    public Promotor createPromotor() {
        return new Promotor();
    }

    /**
     * Create an instance of {@link Chromosome }
     * 
     */
    public Chromosome createChromosome() {
        return new Chromosome();
    }

    /**
     * Create an instance of {@link Ddomain }
     * 
     */
    public Ddomain createDdomain() {
        return new Ddomain();
    }

    /**
     * Create an instance of {@link Subunit }
     * 
     */
    public Subunit createSubunit() {
        return new Subunit();
    }

    /**
     * Create an instance of {@link File }
     * 
     */
    public File createFile() {
        return new File();
    }

    /**
     * Create an instance of {@link Protein }
     * 
     */
    public Protein createProtein() {
        return new Protein();
    }

    /**
     * Create an instance of {@link Dvariant }
     * 
     */
    public Dvariant createDvariant() {
        return new Dvariant();
    }

    /**
     * Create an instance of {@link DbEntry }
     * 
     */
    public DbEntry createDbEntry() {
        return new DbEntry();
    }

    /**
     * Create an instance of {@link Taxon }
     * 
     */
    public Taxon createTaxon() {
        return new Taxon();
    }

    /**
     * Create an instance of {@link Clone }
     * 
     */
    public Clone createClone() {
        return new Clone();
    }

    /**
     * Create an instance of {@link Text }
     * 
     */
    public Text createText() {
        return new Text();
    }

    /**
     * Create an instance of {@link Da }
     * 
     */
    public Da createDa() {
        return new Da();
    }

    /**
     * Create an instance of {@link Gene }
     * 
     */
    public Gene createGene() {
        return new Gene();
    }

    /**
     * Create an instance of {@link Form }
     * 
     */
    public Form createForm() {
        return new Form();
    }

    /**
     * Create an instance of {@link Avariant }
     * 
     */
    public Avariant createAvariant() {
        return new Avariant();
    }

    /**
     * Create an instance of {@link Cell }
     * 
     */
    public Cell createCell() {
        return new Cell();
    }

    /**
     * Create an instance of {@link Copyright }
     * 
     */
    public Copyright createCopyright() {
        return new Copyright();
    }

    /**
     * Create an instance of {@link Homolog }
     * 
     */
    public Homolog createHomolog() {
        return new Homolog();
    }

    /**
     * Create an instance of {@link Organism }
     * 
     */
    public Organism createOrganism() {
        return new Organism();
    }

    /**
     * Create an instance of {@link Input }
     * 
     */
    public Input createInput() {
        return new Input();
    }

    /**
     * Create an instance of {@link Editor }
     * 
     */
    public Editor createEditor() {
        return new Editor();
    }

    /**
     * Create an instance of {@link Rstart }
     * 
     */
    public Rstart createRstart() {
        return new Rstart();
    }

    /**
     * Create an instance of {@link Dmod }
     * 
     */
    public Dmod createDmod() {
        return new Dmod();
    }

    /**
     * Create an instance of {@link Dstop }
     * 
     */
    public Dstop createDstop() {
        return new Dstop();
    }

    /**
     * Create an instance of {@link Binary }
     * 
     */
    public Binary createBinary() {
        return new Binary();
    }

    /**
     * Create an instance of {@link Intron }
     * 
     */
    public Intron createIntron() {
        return new Intron();
    }

    /**
     * Create an instance of {@link Organelle }
     * 
     */
    public Organelle createOrganelle() {
        return new Organelle();
    }

    /**
     * Create an instance of {@link Data }
     * 
     */
    public Data createData() {
        return new Data();
    }

    /**
     * Create an instance of {@link Tissue }
     * 
     */
    public Tissue createTissue() {
        return new Tissue();
    }

    /**
     * Create an instance of {@link Aconflict }
     * 
     */
    public Aconflict createAconflict() {
        return new Aconflict();
    }

    /**
     * Create an instance of {@link Rmod }
     * 
     */
    public Rmod createRmod() {
        return new Rmod();
    }

    /**
     * Create an instance of {@link Journal }
     * 
     */
    public Journal createJournal() {
        return new Journal();
    }

    /**
     * Create an instance of {@link Ra }
     * 
     */
    public Ra createRa() {
        return new Ra();
    }

    /**
     * Create an instance of {@link Particle }
     * 
     */
    public Particle createParticle() {
        return new Particle();
    }

    /**
     * Create an instance of {@link Author }
     * 
     */
    public Author createAuthor() {
        return new Author();
    }

    /**
     * Create an instance of {@link Title }
     * 
     */
    public Title createTitle() {
        return new Title();
    }

    /**
     * Create an instance of {@link Dstart }
     * 
     */
    public Dstart createDstart() {
        return new Dstart();
    }

    /**
     * Create an instance of {@link BookTitle }
     * 
     */
    public BookTitle createBookTitle() {
        return new BookTitle();
    }

    /**
     * Create an instance of {@link Dna }
     * 
     */
    public Dna createDna() {
        return new Dna();
    }

    /**
     * Create an instance of {@link Rna }
     * 
     */
    public Rna createRna() {
        return new Rna();
    }

    /**
     * Create an instance of {@link Name }
     * 
     */
    public Name createName() {
        return new Name();
    }

    /**
     * Create an instance of {@link Domain }
     * 
     */
    public Domain createDomain() {
        return new Domain();
    }

    /**
     * Create an instance of {@link Locus }
     * 
     */
    public Locus createLocus() {
        return new Locus();
    }

    /**
     * Create an instance of {@link Rdomain }
     * 
     */
    public Rdomain createRdomain() {
        return new Rdomain();
    }

    /**
     * Create an instance of {@link Note }
     * 
     */
    public Note createNote() {
        return new Note();
    }

    /**
     * Create an instance of {@link Plasmid }
     * 
     */
    public Plasmid createPlasmid() {
        return new Plasmid();
    }

    /**
     * Create an instance of {@link Bioml }
     * 
     */
    public Bioml createBioml() {
        return new Bioml();
    }

    /**
     * Create an instance of {@link Species }
     * 
     */
    public Species createSpecies() {
        return new Species();
    }

    /**
     * Create an instance of {@link Peptide }
     * 
     */
    public Peptide createPeptide() {
        return new Peptide();
    }

    /**
     * Create an instance of {@link Pages }
     * 
     */
    public Pages createPages() {
        return new Pages();
    }

    /**
     * Create an instance of {@link Rstop }
     * 
     */
    public Rstop createRstop() {
        return new Rstop();
    }

    /**
     * Create an instance of {@link Reference }
     * 
     */
    public Reference createReference() {
        return new Reference();
    }

    /**
     * Create an instance of {@link Exon }
     * 
     */
    public Exon createExon() {
        return new Exon();
    }

    /**
     * Create an instance of {@link Alink }
     * 
     */
    public Alink createAlink() {
        return new Alink();
    }

    /**
     * Create an instance of {@link Volume }
     * 
     */
    public Volume createVolume() {
        return new Volume();
    }

    /**
     * Create an instance of {@link Aa }
     * 
     */
    public Aa createAa() {
        return new Aa();
    }

    /**
     * Create an instance of {@link Rvariant }
     * 
     */
    public Rvariant createRvariant() {
        return new Rvariant();
    }

    /**
     * Create an instance of {@link Group }
     * 
     */
    public Group createGroup() {
        return new Group();
    }

    /**
     * Create an instance of {@link StsDomain }
     * 
     */
    public StsDomain createStsDomain() {
        return new StsDomain();
    }

    /**
     * Create an instance of {@link Amod }
     * 
     */
    public Amod createAmod() {
        return new Amod();
    }

}
